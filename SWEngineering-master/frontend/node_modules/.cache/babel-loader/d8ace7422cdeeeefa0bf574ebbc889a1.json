{"ast":null,"code":"import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { cartReducer } from './reducers/cartReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderMineListReducer } from './reducers/orderReducers';\nimport { productDetailsReducer } from './reducers/productReducers';\nimport { productsListReducer } from './reducers/productReducers';\nimport { userRegisterReducer, userSigninReducer } from './reducers/userReducers';\nconst initialState = {\n  userSignin: {\n    userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n  },\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    // 뒤로가기 해서 배송지 화면으로 갔을 때 버퍼에 저장된 입력값 보여줌.\n    shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {},\n    paymentMethod: 'KakaoPay'\n  }\n};\nconst reducer = combineReducers({\n  productList: productsListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userSignin: userSigninReducer,\n  userRegister: userRegisterReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderMineList: orderMineListReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["C:/Users/hush0/Documents/GitHub/SWEngineering/SWEngineering-master/frontend/src/store.js"],"names":["applyMiddleware","combineReducers","compose","createStore","thunk","cartReducer","orderCreateReducer","orderDetailsReducer","orderMineListReducer","productDetailsReducer","productsListReducer","userRegisterReducer","userSigninReducer","initialState","userSignin","userInfo","localStorage","getItem","JSON","parse","cart","cartItems","shippingAddress","paymentMethod","reducer","productList","productDetails","userRegister","orderCreate","orderDetails","orderMineList","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,OAA3C,EAAoDC,WAApD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,EAAkDC,oBAAlD,QAA+E,0BAA/E;AACA,SAAQC,qBAAR,QAAoC,4BAApC;AACA,SAASC,mBAAT,QAAoC,4BAApC;AACA,SAASC,mBAAT,EAA8BC,iBAA9B,QAAuD,yBAAvD;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACRC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADQ,GAER;AAHQ,GADK;AAMjBG,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAEL,YAAY,CAACC,OAAb,CAAqB,WAArB,IACPC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADO,GAEP,EAHA;AAIF;AACAK,IAAAA,eAAe,EAAEN,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAAyCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAzC,GAA8F,EAL7G;AAMFM,IAAAA,aAAa,EAAE;AANb;AANW,CAArB;AAeA,MAAMC,OAAO,GAAGvB,eAAe,CAAC;AAC5BwB,EAAAA,WAAW,EAAEf,mBADe;AAE5BgB,EAAAA,cAAc,EAAEjB,qBAFY;AAG5BW,EAAAA,IAAI,EAAEf,WAHsB;AAI5BS,EAAAA,UAAU,EAAEF,iBAJgB;AAK5Be,EAAAA,YAAY,EAAEhB,mBALc;AAM5BiB,EAAAA,WAAW,EAAEtB,kBANe;AAO5BuB,EAAAA,YAAY,EAAEtB,mBAPc;AAQ5BuB,EAAAA,aAAa,EAAEtB;AARa,CAAD,CAA/B;AAWA,MAAMuB,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+C/B,OAAvE;AACA,MAAMgC,KAAK,GAAG/B,WAAW,CAACqB,OAAD,EAAUX,YAAV,EAAyBkB,eAAe,CAAC/B,eAAe,CAACI,KAAD,CAAhB,CAAxC,CAAzB;AAEA,eAAe8B,KAAf","sourcesContent":["import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { orderCreateReducer, orderDetailsReducer, orderMineListReducer, } from './reducers/orderReducers';\r\nimport {productDetailsReducer} from './reducers/productReducers';\r\nimport { productsListReducer } from './reducers/productReducers';\r\nimport { userRegisterReducer, userSigninReducer } from './reducers/userReducers';\r\n\r\n\r\nconst initialState = {\r\n    userSignin: {\r\n      userInfo: localStorage.getItem('userInfo')\r\n      ? JSON.parse(localStorage.getItem('userInfo'))\r\n      : null,\r\n    },\r\n    cart: {\r\n      cartItems: localStorage.getItem('cartItems')\r\n        ? JSON.parse(localStorage.getItem('cartItems'))\r\n        : [],\r\n        // 뒤로가기 해서 배송지 화면으로 갔을 때 버퍼에 저장된 입력값 보여줌.\r\n        shippingAddress: localStorage.getItem('shippingAddress')? JSON.parse(localStorage.getItem('shippingAddress')): {},\r\n        paymentMethod: 'KakaoPay',\r\n      },\r\n  };\r\nconst reducer = combineReducers({\r\n    productList: productsListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userSignin: userSigninReducer,\r\n    userRegister: userRegisterReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderMineList: orderMineListReducer,\r\n});\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, initialState , composeEnhancer(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}