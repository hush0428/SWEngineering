{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hush0\\\\Documents\\\\GitHub\\\\SWEngineering\\\\SWEngineering-master\\\\frontend\\\\src\\\\screens\\\\RegisterScreen.js\",\n    _s = $RefreshSig$();\n\n/* 로그인 화면 구현 */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { register } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nexport default function RegisterScreen(props) {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const redirect = props.location.search ? props.location.search.split('=')[1] : '/';\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    userInfo,\n    loading,\n    error\n  } = userRegister;\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('두 비밀번호가 동일하지 않습니다.');\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      props.history.push(redirect);\n    }\n  }, [props.history, redirect, userInfo]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"\\uB4F1\\uB85D\")), loading && /*#__PURE__*/React.createElement(LoadingBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }), error && /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 27\n    }\n  }, error), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"\\uC774\\uB984\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    placeholder: \"Enter name\",\n    required: true,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    placeholder: \"Enter email\",\n    required: true,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    placeholder: \"Enter password\",\n    required: true,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"confirmpassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"confirmpassword\",\n    placeholder: \"Enter confirm password\",\n    required: true,\n    onChange: e => setConfirmPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"\\uB4F1\\uB85D\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, \"\\uC774\\uBBF8 \\uACC4\\uC815\\uC774 \\uC788\\uB098\\uC694? \", ' ', \" \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 43\n    }\n  }, \"\\uB85C\\uADF8\\uC778\")))));\n}\n\n_s(RegisterScreen, \"RJqeP4RwuNYzk+hH1l9Xu/GUu0w=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["C:/Users/hush0/Documents/GitHub/SWEngineering/SWEngineering-master/frontend/src/screens/RegisterScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Link","register","LoadingBox","MessageBox","RegisterScreen","props","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","redirect","location","search","split","userRegister","state","userInfo","loading","error","dispatch","submitHandler","e","preventDefault","alert","history","push","target","value"],"mappings":"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","sourcesContent":["/* 로그인 화면 구현 */\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { register } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nexport default function RegisterScreen(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const redirect = props.location.search\r\n    ? props.location.search.split('=')[1]\r\n    : '/';\r\n\r\n    const userRegister = useSelector((state) => state.userRegister);\r\n    const { userInfo, loading, error } = userRegister;\r\n\r\n    const dispatch = useDispatch();\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if(password !== confirmPassword) {\r\n            alert('두 비밀번호가 동일하지 않습니다.')\r\n        } else {\r\n            dispatch(register(name, email, password));\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            props.history.push(redirect);\r\n        }\r\n    }, [props.history, redirect, userInfo]);\r\n    return (\r\n        <div>\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                <div>\r\n                    <h1>등록</h1>\r\n                </div>\r\n                {loading && <LoadingBox></LoadingBox>}\r\n                {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n                <div>\r\n                    <label htmlFor=\"name\">이름</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"name\" \r\n                        placeholder=\"Enter name\" \r\n                        required\r\n                        onChange={ e => setName(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"email\">이메일 주소</label>\r\n                    <input \r\n                        type=\"email\" \r\n                        id=\"email\" \r\n                        placeholder=\"Enter email\" \r\n                        required\r\n                        onChange={ e => setEmail(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\">비밀번호</label>\r\n                    <input \r\n                        type=\"password\" \r\n                        id=\"password\" \r\n                        placeholder=\"Enter password\" \r\n                        required\r\n                        onChange={ e => setPassword(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"confirmpassword\">비밀번호 확인</label>\r\n                    <input \r\n                        type=\"password\" \r\n                        id=\"confirmpassword\" \r\n                        placeholder=\"Enter confirm password\" \r\n                        required\r\n                        onChange={ e => setConfirmPassword(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <label />\r\n                    <button className=\"primary\" type=\"submit\">\r\n                        등록\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <label />\r\n                    <div>\r\n                        이미 계정이 있나요? {' '} <Link to=\"/signin\">로그인</Link>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}