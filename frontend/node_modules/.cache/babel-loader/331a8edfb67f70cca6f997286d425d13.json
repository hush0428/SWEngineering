{"ast":null,"code":"import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { cartReducer } from './reducers/cartReducers';\nimport { orderCreateReducer, orderDeleteReducer, orderDeliverReducer, orderDetailsReducer, orderPayReducer, orderListReducer, orderMineListReducer } from './reducers/orderReducers';\nimport { productCategoryListReducer, productCreateReducer, productDeleteReducer, productDetailsReducer, productReviewCreateReducer, productsListReducer, productTopSellerListReducer, productUpdateReducer } from './reducers/productReducers';\nimport { eventCategoryListReducer, eventCreateReducer, eventDeleteReducer, eventDetailsReducer, eventReviewCreateReducer, eventsListReducer, eventTopSellerListReducer, eventUpdateReducer } from './reducers/eventReducers';\nimport { userDeleteReducer, userDetailsReducer, userListReducer, userRegisterReducer, userSigninReducer, userTopSellerListReducer, userUpdateProfileReducer, userUpdateReducer } from './reducers/userReducers';\nconst initialState = {\n  userSignin: {\n    userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n  },\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    // 뒤로가기 해서 배송지 화면으로 갔을 때 버퍼에 저장된 입력값 보여줌.\n    shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {},\n    paymentMethod: 'PayPal'\n  }\n};\nconst reducer = combineReducers({\n  productList: productsListReducer,\n  productDetails: productDetailsReducer,\n  eventList: eventsListReducer,\n  eventDetails: eventDetailsReducer,\n  cart: cartReducer,\n  userSignin: userSigninReducer,\n  userRegister: userRegisterReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderMineList: orderMineListReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userUpdate: userUpdateReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productDelete: productDeleteReducer,\n  eventCreate: eventCreateReducer,\n  eventUpdate: eventUpdateReducer,\n  eventDelete: eventDeleteReducer,\n  orderList: orderListReducer,\n  orderDelete: orderDeleteReducer,\n  orderDeliver: orderDeliverReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  productCategoryList: productCategoryListReducer,\n  productTopSellersList: productTopSellerListReducer,\n  productReviewCreate: productReviewCreateReducer,\n  eventCategoryList: eventCategoryListReducer,\n  eventTopSellersList: eventTopSellerListReducer,\n  eventReviewCreate: eventReviewCreateReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["C:/Users/hebin/Desktop/SWE/SWEngineering/frontend/src/store.js"],"names":["applyMiddleware","combineReducers","compose","createStore","thunk","cartReducer","orderCreateReducer","orderDeleteReducer","orderDeliverReducer","orderDetailsReducer","orderPayReducer","orderListReducer","orderMineListReducer","productCategoryListReducer","productCreateReducer","productDeleteReducer","productDetailsReducer","productReviewCreateReducer","productsListReducer","productTopSellerListReducer","productUpdateReducer","eventCategoryListReducer","eventCreateReducer","eventDeleteReducer","eventDetailsReducer","eventReviewCreateReducer","eventsListReducer","eventTopSellerListReducer","eventUpdateReducer","userDeleteReducer","userDetailsReducer","userListReducer","userRegisterReducer","userSigninReducer","userTopSellerListReducer","userUpdateProfileReducer","userUpdateReducer","initialState","userSignin","userInfo","localStorage","getItem","JSON","parse","cart","cartItems","shippingAddress","paymentMethod","reducer","productList","productDetails","eventList","eventDetails","userRegister","orderCreate","orderDetails","orderPay","orderMineList","userDetails","userUpdateProfile","userUpdate","productCreate","productUpdate","productDelete","eventCreate","eventUpdate","eventDelete","orderList","orderDelete","orderDeliver","userList","userDelete","productCategoryList","productTopSellersList","productReviewCreate","eventCategoryList","eventTopSellersList","eventReviewCreate","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"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","sourcesContent":["import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { \r\n  orderCreateReducer, \r\n  orderDeleteReducer,\r\n  orderDeliverReducer,\r\n  orderDetailsReducer, \r\n  orderPayReducer,\r\n  orderListReducer,\r\n  orderMineListReducer, } from './reducers/orderReducers';\r\nimport {\r\n  productCategoryListReducer,\r\n  productCreateReducer, \r\n  productDeleteReducer,\r\n  productDetailsReducer,\r\n  productReviewCreateReducer,\r\n  productsListReducer, \r\n  productTopSellerListReducer, \r\n  productUpdateReducer,\r\n} from './reducers/productReducers';\r\nimport {\r\n  eventCategoryListReducer,\r\n  eventCreateReducer, \r\n  eventDeleteReducer,\r\n  eventDetailsReducer,\r\n  eventReviewCreateReducer,\r\n  eventsListReducer, \r\n  eventTopSellerListReducer, \r\n  eventUpdateReducer,\r\n} from './reducers/eventReducers';\r\nimport {   userDeleteReducer,\r\n  userDetailsReducer,  userListReducer,\r\n  userRegisterReducer, userSigninReducer, userTopSellerListReducer, userUpdateProfileReducer,  userUpdateReducer,\r\n} from './reducers/userReducers';\r\n\r\n\r\nconst initialState = {\r\n    userSignin: {\r\n      userInfo: localStorage.getItem('userInfo')\r\n      ? JSON.parse(localStorage.getItem('userInfo'))\r\n      : null,\r\n    },\r\n    cart: {\r\n      cartItems: localStorage.getItem('cartItems')\r\n        ? JSON.parse(localStorage.getItem('cartItems'))\r\n        : [],\r\n        // 뒤로가기 해서 배송지 화면으로 갔을 때 버퍼에 저장된 입력값 보여줌.\r\n        shippingAddress: localStorage.getItem('shippingAddress')? JSON.parse(localStorage.getItem('shippingAddress')): {},\r\n        paymentMethod: 'PayPal',\r\n      },\r\n  };\r\nconst reducer = combineReducers({\r\n    productList: productsListReducer,\r\n    productDetails: productDetailsReducer,\r\n    eventList: eventsListReducer,\r\n    eventDetails: eventDetailsReducer,\r\n    cart: cartReducer,\r\n    userSignin: userSigninReducer,\r\n    userRegister: userRegisterReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderMineList: orderMineListReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userUpdate: userUpdateReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productDelete: productDeleteReducer,\r\n    eventCreate: eventCreateReducer,\r\n    eventUpdate: eventUpdateReducer,\r\n    eventDelete: eventDeleteReducer,\r\n    orderList: orderListReducer,\r\n    orderDelete: orderDeleteReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    productCategoryList: productCategoryListReducer,\r\n    productTopSellersList: productTopSellerListReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    eventCategoryList: eventCategoryListReducer,\r\n    eventTopSellersList: eventTopSellerListReducer,\r\n    eventReviewCreate: eventReviewCreateReducer,\r\n});\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, initialState , composeEnhancer(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}