{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hush0\\\\Documents\\\\GitHub\\\\SWEngineering\\\\frontend\\\\src\\\\screens\\\\EventEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Axios from 'axios';\nimport { detailsEvent, updateEvent } from '../actions/eventActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { EVENT_UPDATE_RESET } from '../constants/eventConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EventEditScreen(props) {\n  _s();\n\n  const eventId = props.match.params.id; //get event id \n\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState('');\n  const [image, setImage] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState('');\n  const [brand, setBrand] = useState('');\n  const [description, setDescription] = useState('');\n  const eventDetails = useSelector(state => state.eventDetails);\n  const {\n    loading,\n    error,\n    event\n  } = eventDetails;\n  const eventUpdate = useSelector(state => state.eventUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = eventUpdate;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (successUpdate) {\n      props.history.push('/event');\n    }\n\n    if (!event || event._id !== eventId || successUpdate) {\n      dispatch({\n        type: EVENT_UPDATE_RESET\n      });\n      dispatch(detailsEvent(eventId));\n    } else {\n      setName(event.name);\n      setPrice(event.price);\n      setImage(event.image);\n      setCategory(event.category);\n      setCountInStock(event.countInStock);\n      setBrand(event.brand);\n      setDescription(event.description);\n    }\n  }, [event, dispatch, eventId, successUpdate, props.history]); // 이 각각의 변수에 변화가 있을 때 다시 업데이트됨.\n\n  const submitHandler = e => {\n    e.preventDefault(); // TODO: dispatch update event\n\n    dispatch(updateEvent({\n      _id: eventId,\n      name,\n      price,\n      image,\n      category,\n      brand,\n      countInStock,\n      description\n    }));\n  };\n\n  const [loadingUpload, setLoadingUpload] = useState(false);\n  const [errorUpload, setErrorUpload] = useState('');\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append('image', file);\n    setLoadingUpload(true);\n\n    try {\n      const {\n        data\n      } = await Axios.post('/api/uploads2', bodyFormData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      });\n      setImage(data);\n      setLoadingUpload(false);\n    } catch (error) {\n      setErrorUpload(error.message);\n      setLoadingUpload(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uC774\\uBCA4\\uD2B8 \\uC0DD\\uC131 \\uBC0F \\uBCC0\\uACBD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 27\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"\\uC81C\\uBAA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"price\",\n            children: \"\\uC9C4\\uD589\\uAE30\\uAC04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"price\",\n            type: \"text\",\n            placeholder: \"Enter price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"image\",\n            children: \"\\uC774\\uBBF8\\uC9C0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"image\",\n            type: \"text\",\n            placeholder: \"Enter image\",\n            value: image,\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"\\uC0C1\\uC138 \\uC124\\uBA85\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            rows: \"3\",\n            type: \"text\",\n            placeholder: \"Enter description\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary\",\n            type: \"submit\",\n            children: \"\\uC644\\uB8CC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EventEditScreen, \"0vwhOwOqiU8rC5dD1tfk6Mky4qY=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useSelector];\n});\n\n_c = EventEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventEditScreen\");","map":{"version":3,"sources":["C:/Users/hush0/Documents/GitHub/SWEngineering/frontend/src/screens/EventEditScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Axios","detailsEvent","updateEvent","LoadingBox","MessageBox","EVENT_UPDATE_RESET","EventEditScreen","props","eventId","match","params","id","name","setName","price","setPrice","image","setImage","category","setCategory","countInStock","setCountInStock","brand","setBrand","description","setDescription","eventDetails","state","loading","error","event","eventUpdate","loadingUpdate","errorUpdate","success","successUpdate","dispatch","history","push","_id","type","submitHandler","e","preventDefault","loadingUpload","setLoadingUpload","errorUpload","setErrorUpload","userSignin","userInfo","uploadFileHandler","file","target","files","bodyFormData","FormData","append","data","post","headers","Authorization","token","message","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,yBAA1C;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,kBAAT,QAAmC,6BAAnC;;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC7C,QAAMC,OAAO,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAAnC,CAD6C,CACN;;AACvC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACqB,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACuB,YAAD,EAAeC,eAAf,IAAkCxB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACyB,KAAD,EAAQC,QAAR,IAAoB1B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC2B,WAAD,EAAcC,cAAd,IAAgC5B,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAM6B,YAAY,GAAG3B,WAAW,CAAE4B,KAAD,IAAWA,KAAK,CAACD,YAAlB,CAAhC;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA4BJ,YAAlC;AAEA,QAAMK,WAAW,GAAGhC,WAAW,CAAE4B,KAAD,IAAWA,KAAK,CAACI,WAAlB,CAA/B;AACA,QAAM;AACJH,IAAAA,OAAO,EAAEI,aADL;AAEJH,IAAAA,KAAK,EAAEI,WAFH;AAGJC,IAAAA,OAAO,EAAEC;AAHL,MAIFJ,WAJJ;AAKA,QAAMK,QAAQ,GAAGtC,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIuC,aAAJ,EAAmB;AACjB5B,MAAAA,KAAK,CAAC8B,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACD;;AACD,QAAI,CAACR,KAAD,IAAUA,KAAK,CAACS,GAAN,KAAc/B,OAAxB,IAAmC2B,aAAvC,EAAsD;AACpDC,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEnC;AAAR,OAAD,CAAR;AACA+B,MAAAA,QAAQ,CAACnC,YAAY,CAACO,OAAD,CAAb,CAAR;AACD,KAHD,MAGO;AACLK,MAAAA,OAAO,CAACiB,KAAK,CAAClB,IAAP,CAAP;AACAG,MAAAA,QAAQ,CAACe,KAAK,CAAChB,KAAP,CAAR;AACAG,MAAAA,QAAQ,CAACa,KAAK,CAACd,KAAP,CAAR;AACAG,MAAAA,WAAW,CAACW,KAAK,CAACZ,QAAP,CAAX;AACAG,MAAAA,eAAe,CAACS,KAAK,CAACV,YAAP,CAAf;AACAG,MAAAA,QAAQ,CAACO,KAAK,CAACR,KAAP,CAAR;AACAG,MAAAA,cAAc,CAACK,KAAK,CAACN,WAAP,CAAd;AACD;AACF,GAhBQ,EAgBN,CAACM,KAAD,EAAQM,QAAR,EAAkB5B,OAAlB,EAA2B2B,aAA3B,EAA0C5B,KAAK,CAAC8B,OAAhD,CAhBM,CAAT,CApB6C,CAoCiB;;AAC9D,QAAMI,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF,GAD2B,CAE3B;;AACAP,IAAAA,QAAQ,CACNlC,WAAW,CAAC;AACVqC,MAAAA,GAAG,EAAE/B,OADK;AAEVI,MAAAA,IAFU;AAGVE,MAAAA,KAHU;AAIVE,MAAAA,KAJU;AAKVE,MAAAA,QALU;AAMVI,MAAAA,KANU;AAOVF,MAAAA,YAPU;AAQVI,MAAAA;AARU,KAAD,CADL,CAAR;AAYD,GAfD;;AAiBA,QAAM,CAACoB,aAAD,EAAgBC,gBAAhB,IAAoChD,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACiD,WAAD,EAAcC,cAAd,IAAgClD,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMmD,UAAU,GAAGjD,WAAW,CAAE4B,KAAD,IAAWA,KAAK,CAACqB,UAAlB,CAA9B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeD,UAArB;;AAEA,QAAME,iBAAiB,GAAG,MAAOR,CAAP,IAAa;AACrC,UAAMS,IAAI,GAAGT,CAAC,CAACU,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACA,UAAMC,YAAY,GAAG,IAAIC,QAAJ,EAArB;AACAD,IAAAA,YAAY,CAACE,MAAb,CAAoB,OAApB,EAA6BL,IAA7B;AACAN,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;;AACA,QAAI;AACF,YAAM;AAAEY,QAAAA;AAAF,UAAW,MAAMzD,KAAK,CAAC0D,IAAN,CAAW,eAAX,EAA4BJ,YAA5B,EAA0C;AAC/DK,QAAAA,OAAO,EAAE;AACP,0BAAgB,qBADT;AAEPC,UAAAA,aAAa,EAAG,UAASX,QAAQ,CAACY,KAAM;AAFjC;AADsD,OAA1C,CAAvB;AAMA5C,MAAAA,QAAQ,CAACwC,IAAD,CAAR;AACAZ,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,KATD,CASE,OAAOhB,KAAP,EAAc;AACdkB,MAAAA,cAAc,CAAClB,KAAK,CAACiC,OAAP,CAAd;AACAjB,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,GAlBD;;AAoBA,sBACE;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAEJ,aAAjC;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAKGT,aAAa,iBAAI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cALpB,EAMGC,WAAW,iBAAI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,QAApB;AAAA,kBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,cANlB,EAOGL,OAAO,gBACN,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADM,GAEJC,KAAK,gBACP,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,QAApB;AAAA,kBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,cADO,gBAGP;AAAA,gCACE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,EAAE,EAAC,MADL;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,WAAW,EAAC,YAHd;AAIE,YAAA,KAAK,EAAEjB,IAJT;AAKE,YAAA,QAAQ,EAAG8B,CAAD,IAAO7B,OAAO,CAAC6B,CAAC,CAACU,MAAF,CAASW,KAAV;AAL1B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,EAAE,EAAC,OADL;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,WAAW,EAAC,aAHd;AAIE,YAAA,KAAK,EAAEjD,KAJT;AAKE,YAAA,QAAQ,EAAG4B,CAAD,IAAO3B,QAAQ,CAAC2B,CAAC,CAACU,MAAF,CAASW,KAAV;AAL3B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAqBE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,EAAE,EAAC,OADL;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,WAAW,EAAC,aAHd;AAIE,YAAA,KAAK,EAAE/C,KAJT;AAKE,YAAA,QAAQ,EAAG0B,CAAD,IAAOzB,QAAQ,CAACyB,CAAC,CAACU,MAAF,CAASW,KAAV;AAL3B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBF,eA6CE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,EAAE,EAAC,aADL;AAEE,YAAA,IAAI,EAAC,GAFP;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,WAAW,EAAC,mBAJd;AAKE,YAAA,KAAK,EAAEvC,WALT;AAME,YAAA,QAAQ,EAAGkB,CAAD,IAAOjB,cAAc,CAACiB,CAAC,CAACU,MAAF,CAASW,KAAV;AANjC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7CF,eAwDE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,SAAS,EAAC,SAAlB;AAA4B,YAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxDF;AAAA,sBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiFD;;GAjKuBzD,e;UAUDP,W,EAGDA,W,EAMHD,W,EAsCEC,W;;;KAzDGO,e","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Axios from 'axios';\r\nimport { detailsEvent, updateEvent } from '../actions/eventActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { EVENT_UPDATE_RESET } from '../constants/eventConstants';\r\n\r\nexport default function EventEditScreen(props) {\r\n  const eventId = props.match.params.id; //get event id \r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [countInStock, setCountInStock] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  const eventDetails = useSelector((state) => state.eventDetails);\r\n  const { loading, error, event } = eventDetails;\r\n\r\n  const eventUpdate = useSelector((state) => state.eventUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = eventUpdate;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      props.history.push('/event');\r\n    }\r\n    if (!event || event._id !== eventId || successUpdate) {\r\n      dispatch({ type: EVENT_UPDATE_RESET });\r\n      dispatch(detailsEvent(eventId));\r\n    } else {\r\n      setName(event.name);\r\n      setPrice(event.price);\r\n      setImage(event.image);\r\n      setCategory(event.category);\r\n      setCountInStock(event.countInStock);\r\n      setBrand(event.brand);\r\n      setDescription(event.description);\r\n    }\r\n  }, [event, dispatch, eventId, successUpdate, props.history]); // 이 각각의 변수에 변화가 있을 때 다시 업데이트됨.\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // TODO: dispatch update event\r\n    dispatch(\r\n      updateEvent({\r\n        _id: eventId,\r\n        name,\r\n        price,\r\n        image,\r\n        category,\r\n        brand,\r\n        countInStock,\r\n        description,\r\n      })\r\n    );\r\n  };\r\n\r\n  const [loadingUpload, setLoadingUpload] = useState(false);\r\n  const [errorUpload, setErrorUpload] = useState('');\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n \r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const bodyFormData = new FormData();\r\n    bodyFormData.append('image', file);\r\n    setLoadingUpload(true);\r\n    try {\r\n      const { data } = await Axios.post('/api/uploads2', bodyFormData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      });\r\n      setImage(data);\r\n      setLoadingUpload(false);\r\n    } catch (error) {\r\n      setErrorUpload(error.message);\r\n      setLoadingUpload(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <br></br>\r\n          <h1>이벤트 생성 및 변경</h1>\r\n        </div>\r\n        {loadingUpdate && <LoadingBox></LoadingBox>}\r\n        {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\r\n        {loading ? (\r\n          <LoadingBox></LoadingBox>\r\n        ) : error ? (\r\n          <MessageBox variant=\"danger\">{error}</MessageBox>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <label htmlFor=\"name\">제목</label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"price\">진행기간</label>\r\n              <input\r\n                id=\"price\"\r\n                type=\"text\"\r\n                placeholder=\"Enter price\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"image\">이미지</label>\r\n              <input\r\n                id=\"image\"\r\n                type=\"text\"\r\n                placeholder=\"Enter image\"\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            {/* 이미지 업로드가 제대로 안되는데 아직 해결 방안을 찾지 못해 일단은 주석처리 해놓습니다. 이미지를 링크 형태로 업로드 하는 것은 정상 작동되어 일단은 위에 부분만 남겨놓았습니다. */}\r\n            {/* <div>\r\n              <label htmlFor=\"imageFile\">이미지 업로드</label>\r\n              <input\r\n                type=\"file\"\r\n                id=\"imageFile\"\r\n                label=\"Choose Image\"\r\n                onChange={uploadFileHandler}\r\n              ></input>\r\n              {loadingUpload && <LoadingBox></LoadingBox>}\r\n              {errorUpload && (\r\n                <MessageBox variant=\"danger\">{errorUpload}</MessageBox>\r\n              )}\r\n            </div> */}\r\n            <div>\r\n              <label htmlFor=\"description\">상세 설명</label>\r\n              <textarea\r\n                id=\"description\"\r\n                rows=\"3\"\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></textarea>\r\n            </div>\r\n            <div>\r\n              <label></label>\r\n              <button className=\"primary\" type=\"submit\">\r\n                완료\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}