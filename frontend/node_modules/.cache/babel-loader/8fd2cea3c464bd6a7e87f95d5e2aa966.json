{"ast":null,"code":"import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { cartReducer } from './reducers/cartReducers';\nimport { orderCreateReducer, orderDeleteReducer, orderDeliverReducer, orderDetailsReducer, orderListReducer, orderMineListReducer } from './reducers/orderReducers';\nimport { productCreateReducer, productDeleteReducer, productDetailsReducer, productsListReducer, productUpdateReducer } from './reducers/productReducers';\nimport { userDetailsReducer, userRegisterReducer, userSigninReducer, userUpdateProfileReducer } from './reducers/userReducers';\nconst initialState = {\n  userSignin: {\n    userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n  },\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    // 뒤로가기 해서 배송지 화면으로 갔을 때 버퍼에 저장된 입력값 보여줌.\n    shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {},\n    paymentMethod: 'KakaoPay'\n  }\n};\nconst reducer = combineReducers({\n  productList: productsListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userSignin: userSigninReducer,\n  userRegister: userRegisterReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderMineList: orderMineListReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productDelete: productDeleteReducer,\n  orderList: orderListReducer,\n  orderDelete: orderDeleteReducer,\n  orderDeliver: orderDeliverReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["C:/Users/hebin/Desktop/SWE/SWEngineering/SWEngineering-master/frontend/src/store.js"],"names":["applyMiddleware","combineReducers","compose","createStore","thunk","cartReducer","orderCreateReducer","orderDeleteReducer","orderDeliverReducer","orderDetailsReducer","orderListReducer","orderMineListReducer","productCreateReducer","productDeleteReducer","productDetailsReducer","productsListReducer","productUpdateReducer","userDetailsReducer","userRegisterReducer","userSigninReducer","userUpdateProfileReducer","initialState","userSignin","userInfo","localStorage","getItem","JSON","parse","cart","cartItems","shippingAddress","paymentMethod","reducer","productList","productDetails","userRegister","orderCreate","orderDetails","orderMineList","userDetails","userUpdateProfile","productCreate","productUpdate","productDelete","orderList","orderDelete","orderDeliver","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,OAA3C,EAAoDC,WAApD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACEC,kBADF,EAEEC,kBAFF,EAGEC,mBAHF,EAIEC,mBAJF,EAKEC,gBALF,EAMEC,oBANF,QAM+B,0BAN/B;AAOA,SACEC,oBADF,EAEEC,oBAFF,EAGEC,qBAHF,EAIEC,mBAJF,EAKEC,oBALF,QAMO,4BANP;AAOA,SAASC,kBAAT,EAA6BC,mBAA7B,EAAkDC,iBAAlD,EAAqEC,wBAArE,QAAqG,yBAArG;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACRC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADQ,GAER;AAHQ,GADK;AAMjBG,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAEL,YAAY,CAACC,OAAb,CAAqB,WAArB,IACPC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADO,GAEP,EAHA;AAIF;AACAK,IAAAA,eAAe,EAAEN,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAAyCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAzC,GAA8F,EAL7G;AAMFM,IAAAA,aAAa,EAAE;AANb;AANW,CAArB;AAeA,MAAMC,OAAO,GAAG/B,eAAe,CAAC;AAC5BgC,EAAAA,WAAW,EAAElB,mBADe;AAE5BmB,EAAAA,cAAc,EAAEpB,qBAFY;AAG5Bc,EAAAA,IAAI,EAAEvB,WAHsB;AAI5BiB,EAAAA,UAAU,EAAEH,iBAJgB;AAK5BgB,EAAAA,YAAY,EAAEjB,mBALc;AAM5BkB,EAAAA,WAAW,EAAE9B,kBANe;AAO5B+B,EAAAA,YAAY,EAAE5B,mBAPc;AAQ5B6B,EAAAA,aAAa,EAAE3B,oBARa;AAS5B4B,EAAAA,WAAW,EAAEtB,kBATe;AAU5BuB,EAAAA,iBAAiB,EAAEpB,wBAVS;AAW5BqB,EAAAA,aAAa,EAAE7B,oBAXa;AAY5B8B,EAAAA,aAAa,EAAE1B,oBAZa;AAa5B2B,EAAAA,aAAa,EAAE9B,oBAba;AAc5B+B,EAAAA,SAAS,EAAElC,gBAdiB;AAe5BmC,EAAAA,WAAW,EAAEtC,kBAfe;AAgB5BuC,EAAAA,YAAY,EAAEtC;AAhBc,CAAD,CAA/B;AAoBA,MAAMuC,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+C/C,OAAvE;AACA,MAAMgD,KAAK,GAAG/C,WAAW,CAAC6B,OAAD,EAAUX,YAAV,EAAyB0B,eAAe,CAAC/C,eAAe,CAACI,KAAD,CAAhB,CAAxC,CAAzB;AAEA,eAAe8C,KAAf","sourcesContent":["import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { \r\n  orderCreateReducer, \r\n  orderDeleteReducer,\r\n  orderDeliverReducer,\r\n  orderDetailsReducer, \r\n  orderListReducer,\r\n  orderMineListReducer, } from './reducers/orderReducers';\r\nimport {\r\n  productCreateReducer, \r\n  productDeleteReducer,\r\n  productDetailsReducer,\r\n  productsListReducer, \r\n  productUpdateReducer,\r\n} from './reducers/productReducers';\r\nimport { userDetailsReducer, userRegisterReducer, userSigninReducer, userUpdateProfileReducer } from './reducers/userReducers';\r\n\r\n\r\nconst initialState = {\r\n    userSignin: {\r\n      userInfo: localStorage.getItem('userInfo')\r\n      ? JSON.parse(localStorage.getItem('userInfo'))\r\n      : null,\r\n    },\r\n    cart: {\r\n      cartItems: localStorage.getItem('cartItems')\r\n        ? JSON.parse(localStorage.getItem('cartItems'))\r\n        : [],\r\n        // 뒤로가기 해서 배송지 화면으로 갔을 때 버퍼에 저장된 입력값 보여줌.\r\n        shippingAddress: localStorage.getItem('shippingAddress')? JSON.parse(localStorage.getItem('shippingAddress')): {},\r\n        paymentMethod: 'KakaoPay',\r\n      },\r\n  };\r\nconst reducer = combineReducers({\r\n    productList: productsListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userSignin: userSigninReducer,\r\n    userRegister: userRegisterReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderMineList: orderMineListReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productDelete: productDeleteReducer,\r\n    orderList: orderListReducer,\r\n    orderDelete: orderDeleteReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n\r\n});\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, initialState , composeEnhancer(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}