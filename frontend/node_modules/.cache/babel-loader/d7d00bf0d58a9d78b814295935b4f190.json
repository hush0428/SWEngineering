{"ast":null,"code":"import Axios from 'axios';\nimport { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_SUCCESS, PRODUCT_CATEGORY_LIST_SUCCESS, PRODUCT_CATEGORY_LIST_REQUEST, PRODUCT_CATEGORY_LIST_FAIL, PRODUCT_TOPSELLERS_LIST_REQUEST, PRODUCT_TOPSELLERS_LIST_SUCCESS, PRODUCT_TOPSELLERS_LIST_FAIL, PRODUCT_REVIEW_CREATE_REQUEST, PRODUCT_REVIEW_CREATE_SUCCESS, PRODUCT_REVIEW_CREATE_FAIL } from \"../constants/productConstants\";\nexport const listProducts = ({\n  pageNumber = '',\n  name = '',\n  category = '',\n  order = '',\n  min = 0,\n  max = 0,\n  rating = 0\n}) => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products?pageNumber=${pageNumber}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const listProductCategories = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_CATEGORY_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/categories`);\n    dispatch({\n      type: PRODUCT_CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CATEGORY_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsProduct = productId => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n    payload: productId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/${productId}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/products', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST,\n    payload: product\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/products/${product._id}`, product, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      error: message\n    });\n  }\n};\nexport const deleteProduct = productId => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_DELETE_REQUEST,\n    payload: productId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.delete(`/api/products/${productId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listTopSellers = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_TOPSELLERS_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/events/top-sellers');\n    dispatch({\n      type: PRODUCT_TOPSELLERS_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOPSELLERS_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const createReview = (productId, review) => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_REVIEW_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post(`/api/products/${productId}/reviews`, review, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_SUCCESS,\n      payload: data.review\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/kimsanghyun/Desktop/GitHub/SWEngineering/frontend/src/actions/productActions.js"],"names":["Axios","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_SUCCESS","PRODUCT_CATEGORY_LIST_SUCCESS","PRODUCT_CATEGORY_LIST_REQUEST","PRODUCT_CATEGORY_LIST_FAIL","PRODUCT_TOPSELLERS_LIST_REQUEST","PRODUCT_TOPSELLERS_LIST_SUCCESS","PRODUCT_TOPSELLERS_LIST_FAIL","PRODUCT_REVIEW_CREATE_REQUEST","PRODUCT_REVIEW_CREATE_SUCCESS","PRODUCT_REVIEW_CREATE_FAIL","listProducts","pageNumber","name","category","order","min","max","rating","dispatch","type","data","get","payload","error","message","listProductCategories","detailsProduct","productId","response","createProduct","getState","userSignin","userInfo","post","headers","Authorization","token","product","updateProduct","put","_id","deleteProduct","delete","listTopSellers","createReview","review"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport { PRODUCT_DETAILS_FAIL,\n         PRODUCT_DETAILS_REQUEST,\n         PRODUCT_DETAILS_SUCCESS, \n         PRODUCT_LIST_FAIL, \n         PRODUCT_LIST_REQUEST, \n         PRODUCT_LIST_SUCCESS,\n         PRODUCT_CREATE_REQUEST,\n         PRODUCT_CREATE_SUCCESS,\n         PRODUCT_CREATE_FAIL,\n         PRODUCT_UPDATE_REQUEST,\n         PRODUCT_UPDATE_SUCCESS,\n         PRODUCT_UPDATE_FAIL,\n         PRODUCT_DELETE_REQUEST,\n         PRODUCT_DELETE_FAIL,\n         PRODUCT_DELETE_SUCCESS,\n         PRODUCT_CATEGORY_LIST_SUCCESS,\n         PRODUCT_CATEGORY_LIST_REQUEST,\n         PRODUCT_CATEGORY_LIST_FAIL,\n         PRODUCT_TOPSELLERS_LIST_REQUEST,\n         PRODUCT_TOPSELLERS_LIST_SUCCESS,\n         PRODUCT_TOPSELLERS_LIST_FAIL,\n         PRODUCT_REVIEW_CREATE_REQUEST,\n         PRODUCT_REVIEW_CREATE_SUCCESS,\n         PRODUCT_REVIEW_CREATE_FAIL,\n        } from \"../constants/productConstants\"\n\n\nexport const listProducts = ({\n  pageNumber = '',\n  name='',\n  category = '',\n  order = '',\n  min = 0,\n  max = 0,\n  rating = 0,\n}) => async (dispatch) => {\n    dispatch({\n        type: PRODUCT_LIST_REQUEST\n    });\n    try {\n        const { data } = await Axios.get(\n          `/api/products?pageNumber=${pageNumber}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`);\n        dispatch({type: PRODUCT_LIST_SUCCESS , payload : data});\n    } catch (error) {\n        dispatch({type: PRODUCT_LIST_FAIL, payload: error.message});\n        \n    }\n}\n\nexport const listProductCategories = () => async (dispatch) => {\n  dispatch({\n    type: PRODUCT_CATEGORY_LIST_REQUEST,\n  });\n  try {\n    const { data } = await Axios.get(`/api/products/categories`);\n    dispatch({ type: PRODUCT_CATEGORY_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: PRODUCT_CATEGORY_LIST_FAIL, payload: error.message });\n  }\n};\n\nexport const detailsProduct = (productId) => async (dispatch) => {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\n    try {\n      const { data } = await Axios.get(`/api/products/${productId}`);\n      dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_DETAILS_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\n  export const createProduct = () => async (dispatch, getState) => {\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await Axios.post(\n        '/api/products',\n        {},\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({\n        type: PRODUCT_CREATE_SUCCESS,\n        payload: data.product,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\n    }\n  };\n\n  export const updateProduct = (product) => async (dispatch, getState) => {\n    dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\n    const {userSignin: { userInfo },} = getState();\n    try {\n      const { data } = await Axios.put(`/api/products/${product._id}`, product, {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      });\n     dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\n    } catch (error) {\n    const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\n    }\n  };\n\n  export const deleteProduct = (productId) => async (dispatch, getState) => {\n    dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = Axios.delete(`/api/products/${productId}`, {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: PRODUCT_DELETE_SUCCESS, payload:data });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\n    }\n  };\n\n  export const listTopSellers = () => async (dispatch) => {\n    dispatch({\n        type: PRODUCT_TOPSELLERS_LIST_REQUEST\n    });\n    try {\n        const { data } = await Axios.get(\n          '/api/events/top-sellers');\n        dispatch({type: PRODUCT_TOPSELLERS_LIST_SUCCESS , payload : data});\n    } catch (error) {\n        dispatch({type: PRODUCT_TOPSELLERS_LIST_FAIL, payload: error.message});\n    }\n}\n\nexport const createReview = (productId, review) => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_REVIEW_CREATE_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.post(\n      `/api/products/${productId}/reviews`,\n      review,\n      {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      }\n    );\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_SUCCESS,\n      payload: data.review,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_REVIEW_CREATE_FAIL, payload: message });\n  }\n};"]},"metadata":{},"sourceType":"module"}